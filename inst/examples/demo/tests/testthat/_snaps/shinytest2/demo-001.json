{
  "input": {
    "main-board-manage_blocks-add_block": 0,
    "main-board-manage_blocks-append_block": 0,
    "main-board-manage_blocks-remove_block": 0,
    "main-board-manage_blocks-scoutbar": null,
    "main-board-manage_blocks-scoutbar-configuration": {
      "id": "main-board-manage_blocks-scoutbar",
      "theme": "light",
      "placeholder": "Search for a block",
      "actions": [
        {
          "children": [
            {
              "children": {
                "ariaLabel": "dataset_block",
                "label": "dataset block",
                "description": "Choose a dataset from a package",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-table",
                    "role": "presentation",
                    "aria-label": "table icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "static_block",
                "label": "static data block",
                "description": "Static data",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-table",
                    "role": "presentation",
                    "aria-label": "table icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            }
          ],
          "label": "data",
          "class": "scout_section"
        },
        {
          "children": [
            {
              "children": {
                "ariaLabel": "upload_block",
                "label": "data upload block",
                "description": "Upload data",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-file-import",
                    "role": "presentation",
                    "aria-label": "file-import icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            }
          ],
          "label": "file",
          "class": "scout_section"
        },
        {
          "children": [
            {
              "children": {
                "ariaLabel": "csv_block",
                "label": "csv parser block",
                "description": "Read CSV file",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-cogs",
                    "role": "presentation",
                    "aria-label": "cogs icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            }
          ],
          "label": "parse",
          "class": "scout_section"
        },
        {
          "children": [
            {
              "children": {
                "ariaLabel": "llm_plot_block",
                "label": "LLM plot block",
                "description": "Create plots using LLM-generated R code based on natural language questions",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-chart-line",
                    "role": "presentation",
                    "aria-label": "chart-line icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "scatter_block",
                "label": "scatter plot block",
                "description": "Scatter plotting",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-chart-line",
                    "role": "presentation",
                    "aria-label": "chart-line icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            }
          ],
          "label": "plot",
          "class": "scout_section"
        },
        {
          "children": [
            {
              "children": {
                "ariaLabel": "arrange_block",
                "label": "arrange block",
                "description": "Order to the rows of a data.frame",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "filter_block",
                "label": "filter block",
                "description": "Filter rows in a data.frame based on conditions",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "head_block",
                "label": "head/tail block",
                "description": "Data head/tail",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "join_block",
                "label": "join block",
                "description": "Join together two data.frames",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "llm_transform_block",
                "label": "LLM transform block",
                "description": "Transform data using LLM-generated R code based on natural language questions",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "merge_block",
                "label": "merge block",
                "description": "Joining or datasets",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "mutate_block",
                "label": "mutate block",
                "description": "Add or modify columns in a data.frame",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "rbind_block",
                "label": "rbind block",
                "description": "Row-binding of datasets",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "select_block",
                "label": "select block",
                "description": "Subset columns in a data.frame",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            },
            {
              "children": {
                "ariaLabel": "subset_block",
                "label": "subset block",
                "description": "Row and column subsetting",
                "closeOnClick": true,
                "icon": {
                  "type": "i",
                  "key": null,
                  "ref": null,
                  "props": {
                    "class": "fas fa-wand-magic-sparkles",
                    "role": "presentation",
                    "aria-label": "wand-magic-sparkles icon"
                  },
                  "_owner": null
                }
              },
              "class": "scout_action"
            }
          ],
          "label": "transform",
          "class": "scout_section"
        }
      ],
      "showRecentSearch": true
    },
    "main-board-manage_links-network_initialized": true,
    "main-board-manage_links-network_selected": "",
    "main-board-preserve_board-redo": 0,
    "main-board-preserve_board-restore": null,
    "main-board-preserve_board-undo": 0,
    "main-dashboard": false,
    "main-grid-add_to_grid": false,
    "main-grid-grid_layout": {
      "alwaysShowResizeHandle": false,
      "float": true,
      "disableDrag": false,
      "disableResize": false,
      "removable": false,
      "resizable": {
        "handles": "all"
      },
      "acceptWidgets": true,
      "children": [

      ]
    },
    "main-grid-grid_zoom": 0.5,
    "main-grid-lock": false,
    "main-mode": 0,
    "main-preview": 0,
    "main-properties": false
  },
  "output": {
    "main-board-manage_links-network": {
      "x": {
        "nodes": {

        },
        "edges": {

        },
        "nodesToDataframe": true,
        "edgesToDataframe": true,
        "options": {
          "width": "100%",
          "height": "100%",
          "nodes": {
            "shape": "dot"
          },
          "manipulation": {
            "enabled": true,
            "initiallyActive": true,
            "addNode": false,
            "deleteNode": false,
            "deleteEdge": false,
            "editEdge": false
          },
          "interaction": {
            "hover": false,
            "multiselect": true,
            "selectConnectedEdges": false,
            "zoomSpeed": 1
          },
          "edges": {
            "length": 300,
            "smooth": false
          },
          "physics": {
            "solver": "forceAtlas2Based",
            "forceAtlas2Based": {
              "gravitationalConstant": -500,
              "damping": 1,
              "avoidOverlap": 1
            }
          }
        },
        "groups": null,
        "width": "100%",
        "height": "100vh",
        "idselection": {
          "enabled": true,
          "style": "width: 150px; height: 26px",
          "useLabels": true,
          "main": "Select by id"
        },
        "byselection": {
          "enabled": false,
          "style": "width: 150px; height: 26px",
          "multiple": false,
          "hideColor": "rgba(200,200,200,0.5)",
          "highlight": false
        },
        "main": null,
        "submain": null,
        "footer": null,
        "background": "rgba(0, 0, 0, 0)",
        "tooltipStay": 300,
        "tooltipStyle": "position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);",
        "opts_manipulation": {
          "datacss": "table.legend_table {\n  font-size: 11px;\n  border-width:1px;\n  border-color:#d3d3d3;\n  border-style:solid;\n}\ntable.legend_table td {\n  border-width:1px;\n  border-color:#d3d3d3;\n  border-style:solid;\n  padding: 2px;\n}\ndiv.table_content {\n  width:80px;\n  text-align:center;\n}\ndiv.table_description {\n  width:100px;\n}\n\n.operation {\n  font-size:20px;\n}\n\n.network-popUp {\n  display:none;\n  z-index:299;\n  width:250px;\n  /*height:150px;*/\n  background-color: #f9f9f9;\n  border-style:solid;\n  border-width:1px;\n  border-color: #0d0d0d;\n  padding:10px;\n  text-align: center;\n  position:fixed;\n  top:50%;  \n  left:50%;  \n  margin:-100px 0 0 -100px;  \n\n}",
          "addNodeCols": [
            "id",
            "label"
          ],
          "editNodeCols": [
            "id",
            "label"
          ],
          "tab_add_node": "<span id=\"addnode-operation\" class = \"operation\">node<\/span> <br><table style=\"margin:auto;\"><tr><td>id<\/td><td><input id=\"addnode-id\"  type= \"text\" value=\"new value\"><\/td><\/tr><tr><td>label<\/td><td><input id=\"addnode-label\"  type= \"text\" value=\"new value\"><\/td><\/tr><\/table><input type=\"button\" value=\"save\" id=\"addnode-saveButton\"><\/button><input type=\"button\" value=\"cancel\" id=\"addnode-cancelButton\"><\/button>",
          "tab_edit_node": "<span id=\"editnode-operation\" class = \"operation\">node<\/span> <br><table style=\"margin:auto;\"><tr><td>id<\/td><td><input id=\"editnode-id\"  type= \"text\" value=\"new value\"><\/td><\/tr><tr><td>label<\/td><td><input id=\"editnode-label\"  type= \"text\" value=\"new value\"><\/td><\/tr><\/table><input type=\"button\" value=\"save\" id=\"editnode-saveButton\"><\/button><input type=\"button\" value=\"cancel\" id=\"editnode-cancelButton\"><\/button>"
        },
        "highlight": {
          "enabled": false,
          "hoverNearest": false,
          "degree": 1,
          "algorithm": "all",
          "hideColor": "rgba(200,200,200,0.5)",
          "labelOnly": true
        },
        "collapse": {
          "enabled": true,
          "fit": false,
          "resetHighlight": true,
          "clusterOptions": null,
          "keepCoord": true,
          "labelSuffix": "(cluster)"
        },
        "events": {
          "oncontext": "function(e) {\n          e.event.preventDefault(); // avoid showing web inspector ...\n          Shiny.setInputValue('main-board-manage_links-node_right_clicked', e.nodes, {priority: 'event'});\n        }",
          "select": "function(e) {\n          if (e.nodes.length > 1) {\n            Shiny.setInputValue('main-board-manage_links-selected_nodes', e.nodes, {priority: 'event'});\n          }\n        }",
          "selectEdge": "function(e) {\n          Shiny.setInputValue('main-board-manage_links-selected_edge', e.edges[0], {priority: 'event'});\n        }",
          "controlNodeDragEnd": "function(e) {\n          Shiny.setInputValue('main-board-manage_links-new_edge', e.controlEdge, {priority: 'event'});\n          let target = $(`.${e.event.target.offsetParent.className}`)\n            .closest('.visNetwork')\n            .attr('id');\n          // Re-enable add edge mode\n          setTimeout(() => {\n            window.HTMLWidgets.find(`#${target}`).network.addEdgeMode();\n          }, 500);\n        ;}",
          "stabilized": "function(e) {\n          Shiny.setInputValue('main-board-manage_links-stabilized', true, {priority: 'event'});\n        }"
        },
        "OnceEvents": {
          "stabilized": "function() {\n          var network = this;\n          \n          network.on('afterDrawing', function(ctx) {\n            var edges = network.body.edges;\n            var nodes = network.body.nodes;\n            \n            Object.keys(edges).forEach(function(edgeId) {\n              var edge = edges[edgeId];\n              var fromNode = nodes[edge.fromId];\n              var toNode = nodes[edge.toId];\n              \n              // Calculate intersection points\n              if (fromNode && toNode) {\n                // Get positions\n                var fromX = fromNode.x;\n                var fromY = fromNode.y;\n                var toX = toNode.x;\n                var toY = toNode.y;\n                \n                // Calculate angles and distances\n                var angle = Math.atan2(toY - fromY, toX - fromX);\n                var reverseAngle = Math.atan2(fromY - toY, fromX - toX);\n                \n                // Get node radii (using shape.width since shape.radius might not be available)\n                var fromRadius = fromNode.shape.width / 2;\n                var toRadius = toNode.shape.width / 2;\n                \n                // Calculate intersection points\n                var fromIntersectX = fromX + (Math.cos(angle) * fromRadius);\n                var fromIntersectY = fromY + (Math.sin(angle) * fromRadius);\n                var toIntersectX = toX + (Math.cos(reverseAngle) * toRadius);\n                var toIntersectY = toY + (Math.sin(reverseAngle) * toRadius);\n                \n                // Draw connection points at intersection\n                ctx.beginPath();\n                ctx.arc(fromIntersectX, fromIntersectY, 4, 0, 2 * Math.PI);\n                ctx.fillStyle = '#2B7CE9';\n                ctx.fill();\n                ctx.strokeStyle = 'white';\n                ctx.lineWidth = 1;\n                ctx.stroke();\n                \n                ctx.beginPath();\n                ctx.arc(toIntersectX, toIntersectY, 4, 0, 2 * Math.PI);\n                ctx.fillStyle = '#2B7CE9';\n                ctx.fill();\n                ctx.strokeStyle = 'white';\n                ctx.lineWidth = 1;\n                ctx.stroke();\n              }\n            });\n          });\n        }"
        }
      },
      "evals": [
        "events.oncontext",
        "events.select",
        "events.selectEdge",
        "events.controlNodeDragEnd",
        "events.stabilized",
        "OnceEvents.stabilized"
      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    },
    "main-grid-grid": {
      "x": {
        "html": "",
        "options": {
          "alwaysShowResizeHandle": false,
          "animate": true,
          "cellHeight": "auto",
          "column": 12,
          "float": true,
          "disableDrag": false,
          "disableResize": false,
          "margin": "10px",
          "maxRow": 0,
          "minRow": 0,
          "removable": false,
          "resizable": {
            "handles": "all"
          },
          "acceptWidgets": true
        },
        "bg": "#e5e7eb"
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    }
  },
  "export": {

  }
}
