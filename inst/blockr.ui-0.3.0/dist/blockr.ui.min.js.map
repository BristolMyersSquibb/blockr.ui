{
  "version": 3,
  "sources": ["../../../srcjs/keybindings.js", "../../../srcjs/init-network.js", "../../../srcjs/move-blocks.js", "../../../srcjs/node-menu.js", "../../../srcjs/viewer-mode.js", "../../../srcjs/main.js"],
  "sourcesContent": ["export const setKeyBindings = () => {\n  Shiny.addCustomMessageHandler(\"bind-network-keyboard-shortcuts\", (m) => {\n\n    let widget = HTMLWidgets.find(m.id).network;\n\n    $(document).on(\"keydown\", (e) => {\n      // Shift + E\n      if (e.shiftKey && e.keyCode == 69) {\n        widget.addEdgeMode();\n        $(\"button.vis-back\").hide();\n        $(\".vis-separator-line\").hide();\n      }\n    })\n\n    $(document).on(\"keydown\", (e) => {\n      // esc\n      if (e.key === \"Escape\") {\n        widget.disableEditMode();\n        widget.enableEditMode();\n        $(\".vis-close\").hide();\n        $(\".vis-edit\").hide();\n        $(\".vis-separator-line\").hide();\n      }\n    })\n  })\n}\n", "export const initNetwork = () => {\n  // Hide visNetwork selection dropdown\n  Shiny.addCustomMessageHandler(\"hide-vis-dropdown\", (m) => {\n    $(m).css(\"visibility\", \"hidden\")\n  })\n\n  // Handle manipulation ui visibility\n  Shiny.addCustomMessageHandler(\"toggle-manipulation-ui\", (m) => {\n    $(\".vis-close\").hide();\n    $(\".vis-edit\").hide();\n    $(\".vis-separator-line\").hide();\n    if (m.value) {\n      $(\".vis-manipulation\").show();\n    } else {\n      $(\".vis-manipulation\").hide();\n    }\n  })\n\n  // Hide sidebar toggles\n  Shiny.addCustomMessageHandler(\"hide-sidebars-toggles\", (m) => {\n    $(`button[aria-controls=\\\"${m.ns}-dashboard\\\"]`).css('visibility', 'hidden');\n    $(`button[aria-controls=\\\"${m.ns}-properties\\\"]`).css('visibility', 'hidden');\n  });\n} \n", "const getWidget = (id) => {\n  var htmlWidgetsObj = HTMLWidgets.find(\"#\" + id);\n  var widgetObj;\n  if (typeof htmlWidgetsObj !== \"undefined\") {\n    widgetObj = htmlWidgetsObj.getWidget();\n  }\n  return widgetObj;\n}\n\nexport const setupBlocksGrid = () => {\n  Shiny.addCustomMessageHandler(\"add-grid-widget\", (obj) => {\n    var grid = getWidget(obj.id);\n    if (typeof grid != \"undefined\") {\n      obj.data.content = `<div\n              id=\"grid-stack-item-content-${obj.data.id}\"\n              class=\"bg-white p-2 border rounded-4\">\n            </div>`\n      // Initialize the widget\n      grid.addWidget(obj.data);\n      // Move element from the sidebar to the grid slot\n      $(`#grid-stack-item-content-${obj.data.id}`).append($(`#${obj.data.id}`));\n      // If the element is hidden by shinyjs, show it\n      if ($(`#${obj.data.id}`).is(\":hidden\")) {\n        $(`#${obj.data.id}`).show();\n      }\n    }\n  });\n\n  Shiny.addCustomMessageHandler('move-widget-to-sidebar', (m) => {\n    $(m.id).append($(m.block_id));\n  });\n\n  // Handle grid zoom\n  Shiny.addCustomMessageHandler('update-grid-zoom', (m) => {\n    $(m.id).css('zoom', m.zoom);\n  });\n} \n", "const captureMouseLocation = (id, event) => {\n  let location = { x: event.clientX, y: event.clientY };\n  Shiny.setInputValue(\n    id,\n    location,\n    { priority: 'event' }\n  );\n}\n\nexport const manageNodeMenu = () => {\n  Shiny.addCustomMessageHandler(\"capture-mouse-position\", (m) => {\n    //document.addEventListener('click', (e) => {\n    //  captureMouseLocation(m, e)\n    //});\n    document.addEventListener('contextmenu', (e) => {\n      captureMouseLocation(m, e)\n    });\n  })\n\n  // Hide node menu whenever we click outside\n  $('body').click((e) => {\n    if ($(e.target).closest('.node-menu-card').length === 0) {\n      $('.node-menu-card').hide();\n    }\n  });\n\n  Shiny.addCustomMessageHandler(\"show-node-menu\", (m) => {\n    // Create element if needed\n    if ($(`#${m.id}`).length === 0) {\n      let shortId = m.id.split(m.ns)[1];\n      let dropTag = `<div class=\"card node-menu-card\" style=\"width: 18rem; position: absolute;\" id=\"${m.id}\">\n              <div class=\"card-header\"><h5 class=\"card-title\">Block ${shortId} options</h5></div>\n              <div class=\"card-body\">\n                <div class=\"bslib-input-switch form-switch form-check\">\n                  <input \n                    id=\"${m.id}-add_to_grid\"\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\">\n                  <label class=\"form-check-label\" for=\"${m.id}-add_to_grid\">\n                    <span>Use in dashboard?</span>\n                  </label>\n                </div>\n                <div class=\"btn-group btn-group-sm d-flex justify-content-center align-items-center\" role=\"group\">\n                  <button class=\"btn action-button btn-light\" id=\"${m.id}-append_block\" type=\"button\">\n                    <i class=\"fas fa-circle-plus\" role=\"presentation\" aria-label=\"circle-plus icon\"></i>\n                  </button>\n                  <button class=\"btn action-button btn-danger\" id=\"${m.id}-remove_block\" type=\"button\">\n                    <i class=\"fas fa-trash\" role=\"presentation\" aria-label=\"trash icon\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>`\n      $('body').append(dropTag);\n\n      // Ensure we account for the switch grid state if it exists\n      // so that the 2 switches start in sync.\n      if (m.value) {\n        $(`#${m.id}-add_to_grid`).attr(\"checked\", \"\")\n      }\n\n      $(`#${m.id} .btn-group`).click(() => {\n        $('.node-menu-card').hide();\n      });\n\n      Shiny.bindAll($(`#${m.id}`));\n    }\n\n    // Show dropdown\n    $(`#${m.id}`).show().css({ 'top': m.coords.y, 'left': m.coords.x });\n  });\n}\n", "export const handleViewerMode = () => {\n  // Viewer mode\n  Shiny.addCustomMessageHandler('toggle-view', (m) => {\n    if (!m.val) {\n      $(m.id)\n        .parent('.bslib-sidebar-layout')\n        .css('--_sidebar-width', '75%');\n      $(m.id).css('border-left', 'var(--_vert-border)');\n    } else {\n      $(m.id)\n        .parent('.bslib-sidebar-layout')\n        .css('--_sidebar-width', '100%');\n      $(m.id).css('border-left', 'none');\n    }\n  });\n} \n", "import \"../styles/main.scss\";\nimport { setKeyBindings } from \"./keybindings.js\";\nimport { initNetwork } from \"./init-network.js\";\nimport { setupBlocksGrid } from \"./move-blocks.js\";\nimport { manageNodeMenu } from \"./node-menu.js\";\nimport { handleViewerMode } from \"./viewer-mode.js\";\n\n$(function () {\n  setKeyBindings();\n  initNetwork();\n  setupBlocksGrid();\n  manageNodeMenu();\n  handleViewerMode();\n  // TBD How to prevent from unselecting node when clickin outside of it.\n});\n"],
  "mappings": "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",
  "names": ["setKeyBindings", "m", "widget", "e", "initNetwork", "m", "getWidget", "id", "htmlWidgetsObj", "widgetObj", "setupBlocksGrid", "obj", "grid", "m", "captureMouseLocation", "id", "event", "location", "manageNodeMenu", "m", "e", "shortId", "dropTag", "handleViewerMode", "m", "setKeyBindings", "initNetwork", "setupBlocksGrid", "manageNodeMenu", "handleViewerMode"]
}
